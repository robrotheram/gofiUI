html,body{
  width: 100%;
  height: 100%;
}

.App {
  min-height: 100vh;
}
/*
To use Flexbox we need to set the display
setting of the container component to flex.
The we set the direction of the wrapped
components. By default flexbox will order
them by row, but we can also tell it to do
it by column.
*/
.App {
  display: flex;
  flex-direction: column;
}
/*
Something similar is done to the body
element, except we order the wrapped
component as rows.
*/
.App .body {
  display: flex;
  flex-direction: row;
}
/*
Flexbox let's us reorder the way the
elements are placed inside the wrapper
component. Using the order rule, we move
the sidebar to the left of the content
component. We also set its width to 12em
and set its flex propertires so it doesn't
grow or shrink with the rest of the page.
*/
.body .sidebar {
  order: -1;
  max-width: 12em;
  flex-grow: 0;    /* Defined the ability to groe */
  flex-shrink: 0;  /* Defines the ability to shrink */
  flex-basis: 12em;/* Default value of the element before distribuing the remaing space */
}
/*
Lastly we give some custom height to our
header and footer components.
*/
.App .header,
.App .footer {
  height: 4em;
  z-index: 0;
}

.body .container {
  padding: 1em;
}

.body .ms-Breadcrumb {
  margin-top: 0;
  margin-bottom: 1em;
}

.body .selection {
  height: calc(100vh - 16.5em);
  overflow-x: auto;
}

.body .selection .selection-item {
  display: flex;
  padding: 0.5em;
}

.body .selection .selection-item .name {
  margin-left: 1em;
}

.footer {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #141127;
  position: fixed;
  bottom: 0px;
  left: 0px;
  width: 100%;
  z-index: 999999;
}

.footer-container {
  color: white;

}
.NavBar {
  height: 100%;
  display: flex;
  align-items: center;
  padding: 0 0.5em ;
  color: white;
  background-color: #337ab7;
  justify-content: space-between;
}

.NavBar .searchbox {
  width: 20em;
}

.NavBar .searchbox .ms-SearchBox {
  margin-bottom: 0;
  background-color: white;
}

body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  font-size: 16px;
  font-family: 'Source Sans Pro', sans-serif;
  color: #323232;
  line-height: 20px;

  font-size: 14px;
  font-weight: 400;
  text-rendering:optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased;


  height: 100%;
  width: 100%;


}

/** Main Layout rules */
.App {
  min-height: 100vh;
}

.App {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.App .body {
  display: flex;
  flex-direction: row;
  flex: 1;
}

.body .sidebar {
  order: -1;
}

.body .content {
  flex: 1;
}

.body .sidebar {
  max-width: 12em;
  flex: 0 0 12em;
  position: fixed;
  top: 0px;
  bottom: 0px;
  left: 0px;
}

.App .header {
  height: 4em;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
}

.App .footer {
  height: 4em;
}

/** Text */
.text-red {
  color: red;
}

.node {
  width: 300px;
  border: 1px solid transparent;
  border-radius: 4px;
  user-select: none;
  background: white
}

.node.selected {
  border: 1px solid #666;
  box-shadow: 0 0 8px 3px #555;
}

.node-seperator {
  color: black;
  border-color: black;
}

.node-content {
  padding: 14px;
}

.node-title {
  font-size:14px;
}

.node-header {
  cursor: all-scroll;

  background: rgba(248,80,50,1);

  padding-left: 14px;
  text-transform: uppercase;

  border-top-left-radius: 4px;
  border-top-right-radius: 4px;

  border-bottom: 1px solid #353535;

  padding-top: 3px;
  height: 23px;

  font-size: 13px;
  letter-spacing: 1px;

  color:white;
  font-weight: 600;
}
.SidebarMenu{
  background-color: white;
}
.connector {
  fill:none;
  stroke: #777777;
  stroke-width:5;
  stroke-dasharray: 10;
  stroke-linecap: round;
  stroke-dashoffset: 200;
  animation: dash 5s linear infinite;


}

.adminCard {
  width: 100% !important;
  max-width: 100% !important;
  margin-bottom: 10px !important;
  height: auto !important;
  display: block !important;
  z-index: 0 !important;
}

.adminCard > .ms-DocumentCardTitle {
  height: auto !important;
}

@keyframes dash {
  to {
    stroke-dashoffset: 0;
  }
}


.connector-click-area {
  cursor: pointer;
  fill:none;
  stroke:transparent;
  stroke-width:15;
}

.connector-click-area:hover + .connector,
.connector:hover {
  cursor: pointer;
  stroke-width: 8;
}

.connector.selected {
  stroke: #337ab7;
}

.trash-icon .trash-icon-trashcan {
  opacity: 0.8;
}

.trash-icon:hover {
  cursor: pointer;
}

.trash-icon:hover .trash-icon-bg {
  stroke:#337ab7;
  stroke-width: 2;
  opacity: 0.5;
}

.trash-icon:hover .trash-icon-trashcan {
  opacity: 1;
}

.nodeInputWrapper {
  width : 65%;
  float: left;
}

.nodeOutputWrapper {
  width : 35%;
  float: right;
  text-align: right;
}


.nodeInputList, .nodeOutputList {
  list-style: none;
  padding: 0;
  margin-top: 0;
  margin-bottom: 10px;
}

.nodeOutputList li {
  cursor: pointer;
}

.nodeOutputList li a {
  font-size:14px;
  text-decoration: none;
  background: transparent;
  box-sizing: border-box;
  color: #337ab7;
}



.nodeOutputList li a i {
  padding-left: 6px;
}



.nodeInputList li a {
  cursor: default;
  font-size:14px;
  color: #999999;
  display: block;
  text-decoration: none;
  background: transparent;
  box-sizing: border-box;
}
.nodeInputList li a i {
  padding-right: 6px;
}



.inputDot {
  width: 12px;
  height: 12px;
  display: inline-block;
  position: absolute;
  background: #e6e6e6;
  border-radius: 50%;
  top: 0;
  right: 3px;
  left: auto;
  border: 2px solid #fff;
}


.EndPoint { fill:none; stroke:#888888; stroke-width:2 }

.pin-input {
  background: transparent;
  padding: 5px;
  width: 50px;
  display: inline-block;
  margin-left: 16px;
  border-color: #333333;
}

.node-menu {
  display: block;
  z-index: 10020;
}


.well {
  min-height: 20px;
  padding: 19px;
  margin-bottom: 20px;
  background-color: #f5f5f5;
  border: 1px solid #e3e3e3;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
  box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
}

.controls{
    position: fixed;
    top: 55px;
    left: 0px;
    right: 0px;
}

.container{
  position: absolute;
  top: 95px;
  bottom: 55px;
  left: 0px;
  right: 0px;
  overflow: auto;
  background: url('graphy.png');
}

.alertsPanel{
  position: fixed;
  top: 95px;
  left: 0px;
  right: 0px;
  background-color: white;
  z-index: 999999999;
  }



.zui-table {
  border-collapse: collapse;
  border-spacing: 0;
  font: normal 13px Arial, sans-serif;
  table-layout: fixed
}
.zui-table tbody td {
  border: solid 1px #DDEEEE;
  color: #333;
  padding: 10px;
  text-shadow: 1px 1px 1px #fff;
}
.zui-table-horizontal tbody td {
  border-left: none;
  border-right: none;
}



.codebg {
  background-color: #ffffff;
  background-image: url("data:image/svg+xml,%3Csvg width='84' height='48' viewBox='0 0 84 48' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h12v6H0V0zm28 8h12v6H28V8zm14-8h12v6H42V0zm14 0h12v6H56V0zm0 8h12v6H56V8zM42 8h12v6H42V8zm0 16h12v6H42v-6zm14-8h12v6H56v-6zm14 0h12v6H70v-6zm0-16h12v6H70V0zM28 32h12v6H28v-6zM14 16h12v6H14v-6zM0 24h12v6H0v-6zm0 8h12v6H0v-6zm14 0h12v6H14v-6zm14 8h12v6H28v-6zm-14 0h12v6H14v-6zm28 0h12v6H42v-6zm14-8h12v6H56v-6zm0-8h12v6H56v-6zm14 8h12v6H70v-6zm0 8h12v6H70v-6zM14 24h12v6H14v-6zm14-8h12v6H28v-6zM14 8h12v6H14V8zM0 8h12v6H0V8z' fill='%2392ac94' fill-opacity='0.4' fill-rule='evenodd'/%3E%3C/svg%3E");
  height: 100%;
}


.react-toast-notifications-title {
  font-size: 20px;
  z-index: 9999999;
  margin-bottom: 20px;
}